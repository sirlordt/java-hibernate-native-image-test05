/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.9.19'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:31.1-jre'

    //implementation 'org.slf4j:slf4j-api:2.0.5'
    implementation("org.hibernate:hibernate-core:6.1.6.Final")
    implementation("com.mysql:mysql-connector-j:8.0.31")
    implementation("org.hibernate.orm:hibernate-graalvm:6.1.6.Final")
    //implementation 'org.hibernate.orm:hibernate-c3p0:6.1.5.Final'
    implementation 'org.hibernate.orm:hibernate-hikaricp:6.1.6.Final'
    //implementation("org.hibernate.orm:hibernate-hikaricp:6.1.6.Final")
    implementation("org.hibernate.common:hibernate-commons-annotations:6.0.5.Final")
    //implementation("org.jboss.logging:jboss-logging:3.5.0.Final")

    implementation 'ch.qos.logback:logback-core:1.4.5'
    implementation 'ch.qos.logback:logback-classic:1.4.5'

    implementation("net.bytebuddy:byte-buddy:1.12.19")

    annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen:6.1.5.Final'

    //annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

}

application {
    // Define the main class for the application.
    mainClass = 'test05.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

graalvmNative {

    agent {
      enableExperimentalPredefinedClasses = true
      enableExperimentalUnsafeAllocationTracing = true
    }

    metadataRepository {
      enabled = true
    }

    binaries.all {
      resources.autodetect()
    }
    
    binaries {
      main {

        buildArgs.add('--initialize-at-build-time=org.hibernate.internal.util.ReflectHelper')
        //buildArgs.add('--initialize-at-run-time=org.hibernate.cfg.Configuration')
        //buildArgs.add('--initialize-at-build-time=org.hibernate.internal,org.hibernate.jmx,org.hibernate.query')
        //buildArgs.add('--initialize-at-build-time=domain')

      }
    }

    toolchainDetection = false

}